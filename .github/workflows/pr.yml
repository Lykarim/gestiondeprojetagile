name: Build-Analyze
on:
  pull_request:
    types: [opened, synchronize, reopened]


jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up  JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2


#      - name: Dependencies Scan
#        if: 1 > 2
#        run: mvn clean verify -DskipTests -Pcve



      - name: Unit Testing
        run: mvn test -Put

      - name: Integration Testing
        run: mvn test -Pit

      - name: Quality Gate
        run:  mvn clean verify sonar:sonar -Dsonar.organization=lykarim -Dsonar.host.url=https://sonarcloud.io -Dsonar.token=${{ secrets.SONAR_TOKEN }} -Dsonar.projectKey=Lykarim_gestiondeprojetagile

      - name: Check Quality Gate
        run: |
          echo "Checking Quality Gate status..."
          # Appeler l'API de SonarCloud pour obtenir le statut de la Quality Gate
          curl -X GET -u "${{ secrets.SONAR_TOKEN }}:" \
            "https://sonarcloud.io/api/qualitygates/project_status?projectKey=Lykarim_gestiondeprojetagile" \
            -o quality_gate_status.json
          # Extraire le statut de la Quality Gate en utilisant jq
          QUALITY_STATUS=$(jq -r '.projectStatus.status' quality_gate_status.json)
          echo "Quality Gate status: $QUALITY_STATUS"
          # Vérifier si la Quality Gate a échoué
          if [ "$QUALITY_STATUS" != "OK" ]; then
            echo "Quality Gate failed!"
            exit 1
          fi
